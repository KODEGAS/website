name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run ESLint
      run: npm run lint --if-present
      continue-on-error: true  # Allow build to continue even if linting fails
      
    - name: Run type checking
      run: npm run typecheck --if-present
      continue-on-error: true  # Allow build to continue even if type checking fails
      
    - name: Run performance validation
      run: node validate-performance-fixes.js
      
    - name: Build application
      run: npm run build
      env:
        NEXT_PUBLIC_SITE_URL: https://kodegas.com
        
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-files-${{ matrix.node-version }}
        path: .next/
        retention-days: 1

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Use Node.js 20.x
      uses: actions/setup-node@v4
      with:
        node-version: 20.x
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build for production
      run: npm run build
      env:
        NEXT_PUBLIC_SITE_URL: https://kodegas.com
        SENDGRID_API_KEY: ${{ secrets.SENDGRID_API_KEY }}
        
    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: build-files-20.x
        
    - name: Setup Firebase CLI
      uses: google-github-actions/setup-gcloud@v2
      with:
        service_account_key: ${{ secrets.FIREBASE_SERVICE_ACCOUNT }}
        project_id: ${{ secrets.FIREBASE_PROJECT_ID }}
        
    - name: Install Firebase CLI
      run: npm install -g firebase-tools
      
    - name: Deploy to Firebase App Hosting
      run: firebase deploy
      env:
        FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}